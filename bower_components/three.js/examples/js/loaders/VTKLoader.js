THREE.VTKLoader=function(manager){this.manager=manager!==void 0?manager:THREE.DefaultLoadingManager};Object.assign(THREE.VTKLoader.prototype,THREE.EventDispatcher.prototype,{load:function(url,onLoad,onProgress,onError){var scope=this,loader=new THREE.FileLoader(scope.manager);loader.setResponseType("arraybuffer");loader.load(url,function(text){onLoad(scope.parse(text))},onProgress,onError)},parse:function(data){var _StringfromCharCode=String.fromCharCode;function parseASCII(data){var indices=[],positions=[],colors=[],normals=[],result,pat3Floats=/(\-?\d+\.?[\d\-\+e]*)\s+(\-?\d+\.?[\d\-\+e]*)\s+(\-?\d+\.?[\d\-\+e]*)/g,patConnectivity=/^(\d+)\s+([\s\d]*)/,patPOINTS=/^POINTS /,patPOLYGONS=/^POLYGONS /,patTRIANGLE_STRIPS=/^TRIANGLE_STRIPS /,patPOINT_DATA=/^POINT_DATA[ ]+(\d+)/,patCELL_DATA=/^CELL_DATA[ ]+(\d+)/,patCOLOR_SCALARS=/^COLOR_SCALARS[ ]+(\w+)[ ]+3/,patNORMALS=/^NORMALS[ ]+(\w+)[ ]+(\w+)/,inPointsSection=!1,inPolygonsSection=!1,inTriangleStripSection=!1,inPointDataSection=!1,inCellDataSection=!1,inColorSection=!1,inNormalsSection=!1,lines=data.split("\n");for(var i in lines){var line=lines[i];if(inPointsSection){while(null!==(result=pat3Floats.exec(line))){var x=parseFloat(result[1]),y=parseFloat(result[2]),z=parseFloat(result[3]);positions.push(x,y,z)}}else if(inPolygonsSection){if(null!==(result=patConnectivity.exec(line))){var numVertices=parseInt(result[1]),inds=result[2].split(/\s+/);if(3<=numVertices){for(var i0=parseInt(inds[0]),i1,i2,k=1,j=0;j<numVertices-2;++j){i1=parseInt(inds[k]);i2=parseInt(inds[k+1]);indices.push(i0,i1,i2);k++}}}}else if(inTriangleStripSection){if(null!==(result=patConnectivity.exec(line))){var numVertices=parseInt(result[1]),inds=result[2].split(/\s+/);if(3<=numVertices){for(var i0,i1,i2,j=0;j<numVertices-2;j++){if(1===j%2){i0=parseInt(inds[j]);i1=parseInt(inds[j+2]);i2=parseInt(inds[j+1]);indices.push(i0,i1,i2)}else{i0=parseInt(inds[j]);i1=parseInt(inds[j+1]);i2=parseInt(inds[j+2]);indices.push(i0,i1,i2)}}}}}else if(inPointDataSection||inCellDataSection){if(inColorSection){while(null!==(result=pat3Floats.exec(line))){var r=parseFloat(result[1]),g=parseFloat(result[2]),b=parseFloat(result[3]);colors.push(r,g,b)}}else if(inNormalsSection){while(null!==(result=pat3Floats.exec(line))){var nx=parseFloat(result[1]),ny=parseFloat(result[2]),nz=parseFloat(result[3]);normals.push(nx,ny,nz)}}}if(null!==patPOLYGONS.exec(line)){inPolygonsSection=!0;inPointsSection=!1;inTriangleStripSection=!1}else if(null!==patPOINTS.exec(line)){inPolygonsSection=!1;inPointsSection=!0;inTriangleStripSection=!1}else if(null!==patTRIANGLE_STRIPS.exec(line)){inPolygonsSection=!1;inPointsSection=!1;inTriangleStripSection=!0}else if(null!==patPOINT_DATA.exec(line)){inPointDataSection=!0;inPointsSection=!1;inPolygonsSection=!1;inTriangleStripSection=!1}else if(null!==patCELL_DATA.exec(line)){inCellDataSection=!0;inPointsSection=!1;inPolygonsSection=!1;inTriangleStripSection=!1}else if(null!==patCOLOR_SCALARS.exec(line)){inColorSection=!0;inNormalsSection=!1;inPointsSection=!1;inPolygonsSection=!1;inTriangleStripSection=!1}else if(null!==patNORMALS.exec(line)){inNormalsSection=!0;inColorSection=!1;inPointsSection=!1;inPolygonsSection=!1;inTriangleStripSection=!1}}var geometry,stagger="point";if(colors.length===indices.length){stagger="cell"}if("point"===stagger){geometry=new THREE.BufferGeometry;geometry.setIndex(new THREE.BufferAttribute(new Uint32Array(indices),1));geometry.addAttribute("position",new THREE.BufferAttribute(new Float32Array(positions),3));if(colors.length===positions.length){geometry.addAttribute("color",new THREE.BufferAttribute(new Float32Array(colors),3))}if(normals.length===positions.length){geometry.addAttribute("normal",new THREE.BufferAttribute(new Float32Array(normals),3))}}else{geometry=new THREE.Geometry;for(var numTriangles=indices.length/3,numPoints=positions.length/3,face,ia,ib,ic,x,y,z,r,g,b,j=0;j<numPoints;++j){x=positions[3*j+0];y=positions[3*j+1];z=positions[3*j+2];geometry.vertices.push(new THREE.Vector3(x,y,z))}for(var i=0;i<numTriangles;++i){ia=indices[3*i+0];ib=indices[3*i+1];ic=indices[3*i+2];geometry.faces.push(new THREE.Face3(ia,ib,ic))}if(colors.length===3*numTriangles){for(var i=0;i<numTriangles;++i){face=geometry.faces[i];r=colors[3*i+0];g=colors[3*i+1];b=colors[3*i+2];face.color=new THREE.Color().setRGB(r,g,b)}}}return geometry}function parseBinary(data){var count,pointIndex,i,numberOfPoints,s,buffer=new Uint8Array(data),dataView=new DataView(data),points=[],normals=[],indices=[],vtk=[],index=0;function findString(buffer,start){var index=start,c=buffer[index],s=[];while(10!==c){s.push(_StringfromCharCode(c));index++;c=buffer[index]}return{start:start,end:index,next:index+1,parsedString:s.join("")}}var state,line;while(!0){state=findString(buffer,index);line=state.parsedString;if(0===line.indexOf("POINTS")){vtk.push(line);numberOfPoints=parseInt(line.split(" ")[1],10);count=3*(4*numberOfPoints);points=new Float32Array(3*numberOfPoints);pointIndex=state.next;for(i=0;i<numberOfPoints;i++){points[3*i]=dataView.getFloat32(pointIndex,!1);points[3*i+1]=dataView.getFloat32(pointIndex+4,!1);points[3*i+2]=dataView.getFloat32(pointIndex+8,!1);pointIndex=pointIndex+12}state.next=state.next+count+1}else if(0===line.indexOf("TRIANGLE_STRIPS")){var numberOfStrips=parseInt(line.split(" ")[1],10),size=parseInt(line.split(" ")[2],10);count=4*size;indices=new Uint32Array(3*size-9*numberOfStrips);var indicesIndex=0;pointIndex=state.next;for(i=0;i<numberOfStrips;i++){var indexCount=dataView.getInt32(pointIndex,!1),strip=[];pointIndex+=4;for(s=0;s<indexCount;s++){strip.push(dataView.getInt32(pointIndex,!1));pointIndex+=4}for(var j=0;j<indexCount-2;j++){if(j%2){indices[indicesIndex++]=strip[j];indices[indicesIndex++]=strip[j+2];indices[indicesIndex++]=strip[j+1]}else{indices[indicesIndex++]=strip[j];indices[indicesIndex++]=strip[j+1];indices[indicesIndex++]=strip[j+2]}}}state.next=state.next+count+1}else if(0===line.indexOf("POLYGONS")){var numberOfStrips=parseInt(line.split(" ")[1],10),size=parseInt(line.split(" ")[2],10);count=4*size;indices=new Uint32Array(3*size-9*numberOfStrips);var indicesIndex=0;pointIndex=state.next;for(i=0;i<numberOfStrips;i++){var indexCount=dataView.getInt32(pointIndex,!1),strip=[];pointIndex+=4;for(s=0;s<indexCount;s++){strip.push(dataView.getInt32(pointIndex,!1));pointIndex+=4}for(var j=1;j<indexCount-1;j++){indices[indicesIndex++]=strip[0];indices[indicesIndex++]=strip[j];indices[indicesIndex++]=strip[j+1]}}state.next=state.next+count+1}else if(0===line.indexOf("POINT_DATA")){numberOfPoints=parseInt(line.split(" ")[1],10);state=findString(buffer,state.next);count=3*(4*numberOfPoints);normals=new Float32Array(3*numberOfPoints);pointIndex=state.next;for(i=0;i<numberOfPoints;i++){normals[3*i]=dataView.getFloat32(pointIndex,!1);normals[3*i+1]=dataView.getFloat32(pointIndex+4,!1);normals[3*i+2]=dataView.getFloat32(pointIndex+8,!1);pointIndex+=12}state.next=state.next+count}index=state.next;if(index>=buffer.byteLength){break}}var geometry=new THREE.BufferGeometry;geometry.setIndex(new THREE.BufferAttribute(indices,1));geometry.addAttribute("position",new THREE.BufferAttribute(points,3));if(normals.length===points.length){geometry.addAttribute("normal",new THREE.BufferAttribute(normals,3))}return geometry}function Float32Concat(first,second){var firstLength=first.length,result=new Float32Array(firstLength+second.length);result.set(first);result.set(second,firstLength);return result}function Int32Concat(first,second){var firstLength=first.length,result=new Int32Array(firstLength+second.length);result.set(first);result.set(second,firstLength);return result}function parseXML(stringFile){function xmlToJson(xml){var obj={};if(1===xml.nodeType){if(xml.attributes){if(0<xml.attributes.length){obj.attributes={};for(var j=0,attribute;j<xml.attributes.length;j++){attribute=xml.attributes.item(j);obj.attributes[attribute.nodeName]=attribute.nodeValue.trim()}}}}else if(3===xml.nodeType){obj=xml.nodeValue.trim()}if(xml.hasChildNodes()){for(var i=0;i<xml.childNodes.length;i++){var item=xml.childNodes.item(i),nodeName=item.nodeName;if("undefined"===typeof obj[nodeName]){var tmp=xmlToJson(item);if(""!==tmp)obj[nodeName]=tmp}else{if("undefined"===typeof obj[nodeName].push){var old=obj[nodeName];obj[nodeName]=[old]}var tmp=xmlToJson(item);if(""!==tmp)obj[nodeName].push(tmp)}}}return obj}function Base64toByteArray(b64){var Arr="undefined"!==typeof Uint8Array?Uint8Array:Array,i,lookup=[],revLookup=[],code="ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/",len=code.length;for(i=0;i<len;i++){lookup[i]=code[i]}for(i=0;i<len;++i){revLookup[code.charCodeAt(i)]=i}revLookup["-".charCodeAt(0)]=62;revLookup["_".charCodeAt(0)]=63;var j,l,tmp,placeHolders,arr,len=b64.length;if(0<len%4){throw new Error("Invalid string. Length must be a multiple of 4")}placeHolders="="===b64[len-2]?2:"="===b64[len-1]?1:0;arr=new Arr(3*len/4-placeHolders);l=0<placeHolders?len-4:len;var L=0;for(i=0,j=0;i<l;i+=4,j+=3){tmp=revLookup[b64.charCodeAt(i)]<<18|revLookup[b64.charCodeAt(i+1)]<<12|revLookup[b64.charCodeAt(i+2)]<<6|revLookup[b64.charCodeAt(i+3)];arr[L++]=(16711680&tmp)>>16;arr[L++]=(65280&tmp)>>8;arr[L++]=255&tmp}if(2===placeHolders){tmp=revLookup[b64.charCodeAt(i)]<<2|revLookup[b64.charCodeAt(i+1)]>>4;arr[L++]=255&tmp}else if(1===placeHolders){tmp=revLookup[b64.charCodeAt(i)]<<10|revLookup[b64.charCodeAt(i+1)]<<4|revLookup[b64.charCodeAt(i+2)]>>2;arr[L++]=255&tmp>>8;arr[L++]=255&tmp}return arr}function parseDataArray(ele,compressed){var numBytes=0;if("UInt64"===json.attributes.header_type){numBytes=8}else if("UInt32"===json.attributes.header_type){numBytes=4}if("binary"===ele.attributes.format&&compressed){var rawData,content,byteData,blocks,cSizeStart,headerSize,padding,dataOffsets,currentOffset;if("Float32"===ele.attributes.type){var txt=new Float32Array}else if("Int64"===ele.attributes.type){var txt=new Int32Array}rawData=ele["#text"];byteData=Base64toByteArray(rawData);blocks=byteData[0];for(var i=1;i<numBytes-1;i++){blocks=blocks|byteData[i]<<i*numBytes}headerSize=(blocks+3)*numBytes;padding=0<headerSize%3?3-headerSize%3:0;headerSize=headerSize+padding;dataOffsets=[];currentOffset=headerSize;dataOffsets.push(currentOffset);cSizeStart=3*numBytes;for(var i=0,currentBlockSize;i<blocks;i++){currentBlockSize=byteData[i*numBytes+cSizeStart];for(var j=1;j<numBytes-1;j++){currentBlockSize=currentBlockSize|byteData[i*numBytes+cSizeStart+j]<<8*j}currentOffset=currentOffset+currentBlockSize;dataOffsets.push(currentOffset)}for(var i=0,inflate;i<dataOffsets.length-1;i++){inflate=new Zlib.Inflate(byteData.slice(dataOffsets[i],dataOffsets[i+1]),{resize:!0,verify:!0});content=inflate.decompress();content=content.buffer;if("Float32"===ele.attributes.type){content=new Float32Array(content);txt=Float32Concat(txt,content)}else if("Int64"===ele.attributes.type){content=new Int32Array(content);txt=Int32Concat(txt,content)}}delete ele["#text"];if("Float32"===ele.attributes.type){if("binary"===ele.attributes.format){if(!compressed){txt=txt.filter(function(el,idx){if(0!==idx)return!0})}}}else if("Int64"===ele.attributes.type){if("binary"===ele.attributes.format){if(!compressed){txt=txt.filter(function(el,idx){if(0!==idx)return!0})}txt=txt.filter(function(el,idx){if(1!==idx%2)return!0})}}}else{if("binary"===ele.attributes.format&&!compressed){var content=Base64toByteArray(ele["#text"]);content=content.slice(numBytes).buffer}else{if(ele["#text"]){var content=ele["#text"].split(/\s+/).filter(function(el){if(""!==el)return el})}else{var content=new Int32Array(0).buffer}}delete ele["#text"];if("Float32"===ele.attributes.type){var txt=new Float32Array(content)}else if("Int32"===ele.attributes.type){var txt=new Int32Array(content)}else if("Int64"===ele.attributes.type){var txt=new Int32Array(content);if("binary"===ele.attributes.format){txt=txt.filter(function(el,idx){if(1!==idx%2)return!0})}}}return txt}var dom=null;if(window.DOMParser){try{dom=new DOMParser().parseFromString(stringFile,"text/xml")}catch(e){dom=null}}else if(window.ActiveXObject){try{dom=new ActiveXObject("Microsoft.XMLDOM");dom.async=!1;if(!dom.loadXML()){throw new Error(dom.parseError.reason+dom.parseError.srcText)}}catch(e){dom=null}}else{throw new Error("Cannot parse xml string!")}var doc=dom.documentElement,json=xmlToJson(doc),points=[],normals=[],indices=[];if(json.PolyData){var piece=json.PolyData.Piece,compressed=json.attributes.hasOwnProperty("compressor"),sections=["PointData","Points","Strips","Polys"],sectionIndex=0,numberOfSections=sections.length;while(sectionIndex<numberOfSections){var section=piece[sections[sectionIndex]];if(section&&section.DataArray){if("[object Array]"===Object.prototype.toString.call(section.DataArray)){var arr=section.DataArray}else{var arr=[section.DataArray]}var dataArrayIndex=0,numberOfDataArrays=arr.length;while(dataArrayIndex<numberOfDataArrays){if("#text"in arr[dataArrayIndex]&&0<arr[dataArrayIndex]["#text"].length){arr[dataArrayIndex].text=parseDataArray(arr[dataArrayIndex],compressed)}dataArrayIndex++}switch(sections[sectionIndex]){case"PointData":var numberOfPoints=parseInt(piece.attributes.NumberOfPoints),normalsName=section.attributes.Normals;if(0<numberOfPoints){for(var i=0,len=arr.length;i<len;i++){if(normalsName===arr[i].attributes.Name){var components=arr[i].attributes.NumberOfComponents;normals=new Float32Array(numberOfPoints*components);normals.set(arr[i].text,0)}}}break;case"Points":var numberOfPoints=parseInt(piece.attributes.NumberOfPoints);if(0<numberOfPoints){var components=section.DataArray.attributes.NumberOfComponents;points=new Float32Array(numberOfPoints*components);points.set(section.DataArray.text,0)}break;case"Strips":var numberOfStrips=parseInt(piece.attributes.NumberOfStrips);if(0<numberOfStrips){var connectivity=new Int32Array(section.DataArray[0].text.length),offset=new Int32Array(section.DataArray[1].text.length);connectivity.set(section.DataArray[0].text,0);offset.set(section.DataArray[1].text,0);var size=numberOfStrips+connectivity.length;indices=new Uint32Array(3*size-9*numberOfStrips);for(var indicesIndex=0,i=0,len=numberOfStrips,strip;i<len;i++){strip=[];for(var s=0,len1=offset[i],len0=0;s<len1-len0;s++){strip.push(connectivity[s]);if(0<i)len0=offset[i-1]}for(var j=0,len1=offset[i],len0=0;j<len1-len0-2;j++){if(j%2){indices[indicesIndex++]=strip[j];indices[indicesIndex++]=strip[j+2];indices[indicesIndex++]=strip[j+1]}else{indices[indicesIndex++]=strip[j];indices[indicesIndex++]=strip[j+1];indices[indicesIndex++]=strip[j+2]}if(0<i)len0=offset[i-1]}}}break;case"Polys":var numberOfPolys=parseInt(piece.attributes.NumberOfPolys);if(0<numberOfPolys){var connectivity=new Int32Array(section.DataArray[0].text.length),offset=new Int32Array(section.DataArray[1].text.length);connectivity.set(section.DataArray[0].text,0);offset.set(section.DataArray[1].text,0);var size=numberOfPolys+connectivity.length;indices=new Uint32Array(3*size-9*numberOfPolys);var indicesIndex=0,connectivityIndex=0,i=0,len=numberOfPolys,len0=0;while(i<len){var poly=[],s=0,len1=offset[i];while(s<len1-len0){poly.push(connectivity[connectivityIndex++]);s++}var j=1;while(j<len1-len0-1){indices[indicesIndex++]=poly[0];indices[indicesIndex++]=poly[j];indices[indicesIndex++]=poly[j+1];j++}i++;len0=offset[i-1]}}break;default:break;}}sectionIndex++}var geometry=new THREE.BufferGeometry;geometry.setIndex(new THREE.BufferAttribute(indices,1));geometry.addAttribute("position",new THREE.BufferAttribute(points,3));if(normals.length===points.length){geometry.addAttribute("normal",new THREE.BufferAttribute(normals,3))}return geometry}}function getStringFile(data){var stringFile="",charArray=new Uint8Array(data),i=0,len=charArray.length;while(len--){stringFile+=_StringfromCharCode(charArray[i++])}return stringFile}var meta=THREE.LoaderUtils.decodeText(new Uint8Array(data,0,250)).split("\n");if(-1!==meta[0].indexOf("xml")){return parseXML(getStringFile(data))}else if(meta[2].includes("ASCII")){return parseASCII(getStringFile(data))}else{return parseBinary(data)}}});